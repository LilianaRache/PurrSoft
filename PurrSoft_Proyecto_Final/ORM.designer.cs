#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PurrSoft_Proyecto_Final
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PurrSoft")]
	public partial class ORMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCiudades(Ciudades instance);
    partial void UpdateCiudades(Ciudades instance);
    partial void DeleteCiudades(Ciudades instance);
    partial void InsertDetalle_historia(Detalle_historia instance);
    partial void UpdateDetalle_historia(Detalle_historia instance);
    partial void DeleteDetalle_historia(Detalle_historia instance);
    partial void InsertEstados(Estados instance);
    partial void UpdateEstados(Estados instance);
    partial void DeleteEstados(Estados instance);
    partial void InsertMascotas(Mascotas instance);
    partial void UpdateMascotas(Mascotas instance);
    partial void DeleteMascotas(Mascotas instance);
    partial void InsertPermisos(Permisos instance);
    partial void UpdatePermisos(Permisos instance);
    partial void DeletePermisos(Permisos instance);
    partial void InsertRoles(Roles instance);
    partial void UpdateRoles(Roles instance);
    partial void DeleteRoles(Roles instance);
    partial void InsertRoles_Permiso(Roles_Permiso instance);
    partial void UpdateRoles_Permiso(Roles_Permiso instance);
    partial void DeleteRoles_Permiso(Roles_Permiso instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    #endregion
		
		public ORMDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PurrSoftConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ORMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ciudades> Ciudades
		{
			get
			{
				return this.GetTable<Ciudades>();
			}
		}
		
		public System.Data.Linq.Table<Detalle_historia> Detalle_historia
		{
			get
			{
				return this.GetTable<Detalle_historia>();
			}
		}
		
		public System.Data.Linq.Table<Estados> Estados
		{
			get
			{
				return this.GetTable<Estados>();
			}
		}
		
		public System.Data.Linq.Table<Mascotas> Mascotas
		{
			get
			{
				return this.GetTable<Mascotas>();
			}
		}
		
		public System.Data.Linq.Table<Permisos> Permisos
		{
			get
			{
				return this.GetTable<Permisos>();
			}
		}
		
		public System.Data.Linq.Table<Roles> Roles
		{
			get
			{
				return this.GetTable<Roles>();
			}
		}
		
		public System.Data.Linq.Table<Roles_Permiso> Roles_Permiso
		{
			get
			{
				return this.GetTable<Roles_Permiso>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ciudades")]
	public partial class Ciudades : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_ciudad;
		
		private string _Nombre_ciudad;
		
		private EntitySet<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ciudadChanging(int value);
    partial void OnID_ciudadChanged();
    partial void OnNombre_ciudadChanging(string value);
    partial void OnNombre_ciudadChanged();
    #endregion
		
		public Ciudades()
		{
			this._Usuarios = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios), new Action<Usuarios>(this.detach_Usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ciudad", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_ciudad
		{
			get
			{
				return this._ID_ciudad;
			}
			set
			{
				if ((this._ID_ciudad != value))
				{
					this.OnID_ciudadChanging(value);
					this.SendPropertyChanging();
					this._ID_ciudad = value;
					this.SendPropertyChanged("ID_ciudad");
					this.OnID_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_ciudad", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nombre_ciudad
		{
			get
			{
				return this._Nombre_ciudad;
			}
			set
			{
				if ((this._Nombre_ciudad != value))
				{
					this.OnNombre_ciudadChanging(value);
					this.SendPropertyChanging();
					this._Nombre_ciudad = value;
					this.SendPropertyChanged("Nombre_ciudad");
					this.OnNombre_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ciudades_Usuarios", Storage="_Usuarios", ThisKey="ID_ciudad", OtherKey="ID_ciudad")]
		public EntitySet<Usuarios> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Ciudades = this;
		}
		
		private void detach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Ciudades = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detalle_historia")]
	public partial class Detalle_historia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_detalle_historia;
		
		private int _ID_mascota;
		
		private string _Nombre_doctor;
		
		private string _Motivo_consulta;
		
		private string _Descripcion_caso;
		
		private string _Antecedentes;
		
		private string _Valoracion_resultado;
		
		private string _Prescripcion_medica;
		
		private System.DateTime _Fecha_consulta_medica;
		
		private System.Nullable<System.DateTime> _Fecha_proxima_consulta;
		
		private EntityRef<Mascotas> _Mascotas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_detalle_historiaChanging(int value);
    partial void OnID_detalle_historiaChanged();
    partial void OnID_mascotaChanging(int value);
    partial void OnID_mascotaChanged();
    partial void OnNombre_doctorChanging(string value);
    partial void OnNombre_doctorChanged();
    partial void OnMotivo_consultaChanging(string value);
    partial void OnMotivo_consultaChanged();
    partial void OnDescripcion_casoChanging(string value);
    partial void OnDescripcion_casoChanged();
    partial void OnAntecedentesChanging(string value);
    partial void OnAntecedentesChanged();
    partial void OnValoracion_resultadoChanging(string value);
    partial void OnValoracion_resultadoChanged();
    partial void OnPrescripcion_medicaChanging(string value);
    partial void OnPrescripcion_medicaChanged();
    partial void OnFecha_consulta_medicaChanging(System.DateTime value);
    partial void OnFecha_consulta_medicaChanged();
    partial void OnFecha_proxima_consultaChanging(System.Nullable<System.DateTime> value);
    partial void OnFecha_proxima_consultaChanged();
    #endregion
		
		public Detalle_historia()
		{
			this._Mascotas = default(EntityRef<Mascotas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_detalle_historia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_detalle_historia
		{
			get
			{
				return this._ID_detalle_historia;
			}
			set
			{
				if ((this._ID_detalle_historia != value))
				{
					this.OnID_detalle_historiaChanging(value);
					this.SendPropertyChanging();
					this._ID_detalle_historia = value;
					this.SendPropertyChanged("ID_detalle_historia");
					this.OnID_detalle_historiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_mascota", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_mascota
		{
			get
			{
				return this._ID_mascota;
			}
			set
			{
				if ((this._ID_mascota != value))
				{
					if (this._Mascotas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_mascotaChanging(value);
					this.SendPropertyChanging();
					this._ID_mascota = value;
					this.SendPropertyChanged("ID_mascota");
					this.OnID_mascotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre_doctor", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string Nombre_doctor
		{
			get
			{
				return this._Nombre_doctor;
			}
			set
			{
				if ((this._Nombre_doctor != value))
				{
					this.OnNombre_doctorChanging(value);
					this.SendPropertyChanging();
					this._Nombre_doctor = value;
					this.SendPropertyChanged("Nombre_doctor");
					this.OnNombre_doctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motivo_consulta", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Motivo_consulta
		{
			get
			{
				return this._Motivo_consulta;
			}
			set
			{
				if ((this._Motivo_consulta != value))
				{
					this.OnMotivo_consultaChanging(value);
					this.SendPropertyChanging();
					this._Motivo_consulta = value;
					this.SendPropertyChanged("Motivo_consulta");
					this.OnMotivo_consultaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion_caso", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Descripcion_caso
		{
			get
			{
				return this._Descripcion_caso;
			}
			set
			{
				if ((this._Descripcion_caso != value))
				{
					this.OnDescripcion_casoChanging(value);
					this.SendPropertyChanging();
					this._Descripcion_caso = value;
					this.SendPropertyChanged("Descripcion_caso");
					this.OnDescripcion_casoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Antecedentes", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Antecedentes
		{
			get
			{
				return this._Antecedentes;
			}
			set
			{
				if ((this._Antecedentes != value))
				{
					this.OnAntecedentesChanging(value);
					this.SendPropertyChanging();
					this._Antecedentes = value;
					this.SendPropertyChanged("Antecedentes");
					this.OnAntecedentesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valoracion_resultado", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Valoracion_resultado
		{
			get
			{
				return this._Valoracion_resultado;
			}
			set
			{
				if ((this._Valoracion_resultado != value))
				{
					this.OnValoracion_resultadoChanging(value);
					this.SendPropertyChanging();
					this._Valoracion_resultado = value;
					this.SendPropertyChanged("Valoracion_resultado");
					this.OnValoracion_resultadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prescripcion_medica", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Prescripcion_medica
		{
			get
			{
				return this._Prescripcion_medica;
			}
			set
			{
				if ((this._Prescripcion_medica != value))
				{
					this.OnPrescripcion_medicaChanging(value);
					this.SendPropertyChanging();
					this._Prescripcion_medica = value;
					this.SendPropertyChanged("Prescripcion_medica");
					this.OnPrescripcion_medicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_consulta_medica", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha_consulta_medica
		{
			get
			{
				return this._Fecha_consulta_medica;
			}
			set
			{
				if ((this._Fecha_consulta_medica != value))
				{
					this.OnFecha_consulta_medicaChanging(value);
					this.SendPropertyChanging();
					this._Fecha_consulta_medica = value;
					this.SendPropertyChanged("Fecha_consulta_medica");
					this.OnFecha_consulta_medicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_proxima_consulta", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha_proxima_consulta
		{
			get
			{
				return this._Fecha_proxima_consulta;
			}
			set
			{
				if ((this._Fecha_proxima_consulta != value))
				{
					this.OnFecha_proxima_consultaChanging(value);
					this.SendPropertyChanging();
					this._Fecha_proxima_consulta = value;
					this.SendPropertyChanged("Fecha_proxima_consulta");
					this.OnFecha_proxima_consultaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mascotas_Detalle_historia", Storage="_Mascotas", ThisKey="ID_mascota", OtherKey="ID_mascota", IsForeignKey=true)]
		public Mascotas Mascotas
		{
			get
			{
				return this._Mascotas.Entity;
			}
			set
			{
				Mascotas previousValue = this._Mascotas.Entity;
				if (((previousValue != value) 
							|| (this._Mascotas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mascotas.Entity = null;
						previousValue.Detalle_historia.Remove(this);
					}
					this._Mascotas.Entity = value;
					if ((value != null))
					{
						value.Detalle_historia.Add(this);
						this._ID_mascota = value.ID_mascota;
					}
					else
					{
						this._ID_mascota = default(int);
					}
					this.SendPropertyChanged("Mascotas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estados")]
	public partial class Estados : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_estado;
		
		private string _Descripcion;
		
		private EntitySet<Mascotas> _Mascotas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_estadoChanging(int value);
    partial void OnID_estadoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Estados()
		{
			this._Mascotas = new EntitySet<Mascotas>(new Action<Mascotas>(this.attach_Mascotas), new Action<Mascotas>(this.detach_Mascotas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_estado", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_estado
		{
			get
			{
				return this._ID_estado;
			}
			set
			{
				if ((this._ID_estado != value))
				{
					this.OnID_estadoChanging(value);
					this.SendPropertyChanging();
					this._ID_estado = value;
					this.SendPropertyChanged("ID_estado");
					this.OnID_estadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(15)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Mascotas", Storage="_Mascotas", ThisKey="ID_estado", OtherKey="ID_estado_mascota")]
		public EntitySet<Mascotas> Mascotas
		{
			get
			{
				return this._Mascotas;
			}
			set
			{
				this._Mascotas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mascotas(Mascotas entity)
		{
			this.SendPropertyChanging();
			entity.Estados = this;
		}
		
		private void detach_Mascotas(Mascotas entity)
		{
			this.SendPropertyChanging();
			entity.Estados = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mascotas")]
	public partial class Mascotas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_mascota;
		
		private int _Cedula_usuario;
		
		private string _Tipo_documento_usuario;
		
		private string _Nombre;
		
		private string _Especie;
		
		private string _Raza;
		
		private string _Color;
		
		private string _Sexo;
		
		private System.DateTime _Fecha_nacimiento;
		
		private string _Señas_particulares;
		
		private int _ID_estado_mascota;
		
		private EntitySet<Detalle_historia> _Detalle_historia;
		
		private EntityRef<Estados> _Estados;
		
		private EntityRef<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_mascotaChanging(int value);
    partial void OnID_mascotaChanged();
    partial void OnCedula_usuarioChanging(int value);
    partial void OnCedula_usuarioChanged();
    partial void OnTipo_documento_usuarioChanging(string value);
    partial void OnTipo_documento_usuarioChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEspecieChanging(string value);
    partial void OnEspecieChanged();
    partial void OnRazaChanging(string value);
    partial void OnRazaChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnSexoChanging(string value);
    partial void OnSexoChanged();
    partial void OnFecha_nacimientoChanging(System.DateTime value);
    partial void OnFecha_nacimientoChanged();
    partial void OnSeñas_particularesChanging(string value);
    partial void OnSeñas_particularesChanged();
    partial void OnID_estado_mascotaChanging(int value);
    partial void OnID_estado_mascotaChanged();
    #endregion
		
		public Mascotas()
		{
			this._Detalle_historia = new EntitySet<Detalle_historia>(new Action<Detalle_historia>(this.attach_Detalle_historia), new Action<Detalle_historia>(this.detach_Detalle_historia));
			this._Estados = default(EntityRef<Estados>);
			this._Usuarios = default(EntityRef<Usuarios>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_mascota", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID_mascota
		{
			get
			{
				return this._ID_mascota;
			}
			set
			{
				if ((this._ID_mascota != value))
				{
					this.OnID_mascotaChanging(value);
					this.SendPropertyChanging();
					this._ID_mascota = value;
					this.SendPropertyChanged("ID_mascota");
					this.OnID_mascotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula_usuario", DbType="Int NOT NULL")]
		public int Cedula_usuario
		{
			get
			{
				return this._Cedula_usuario;
			}
			set
			{
				if ((this._Cedula_usuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCedula_usuarioChanging(value);
					this.SendPropertyChanging();
					this._Cedula_usuario = value;
					this.SendPropertyChanged("Cedula_usuario");
					this.OnCedula_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo_documento_usuario", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string Tipo_documento_usuario
		{
			get
			{
				return this._Tipo_documento_usuario;
			}
			set
			{
				if ((this._Tipo_documento_usuario != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipo_documento_usuarioChanging(value);
					this.SendPropertyChanging();
					this._Tipo_documento_usuario = value;
					this.SendPropertyChanged("Tipo_documento_usuario");
					this.OnTipo_documento_usuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Especie", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Especie
		{
			get
			{
				return this._Especie;
			}
			set
			{
				if ((this._Especie != value))
				{
					this.OnEspecieChanging(value);
					this.SendPropertyChanging();
					this._Especie = value;
					this.SendPropertyChanged("Especie");
					this.OnEspecieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Raza", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Raza
		{
			get
			{
				return this._Raza;
			}
			set
			{
				if ((this._Raza != value))
				{
					this.OnRazaChanging(value);
					this.SendPropertyChanging();
					this._Raza = value;
					this.SendPropertyChanged("Raza");
					this.OnRazaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sexo", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string Sexo
		{
			get
			{
				return this._Sexo;
			}
			set
			{
				if ((this._Sexo != value))
				{
					this.OnSexoChanging(value);
					this.SendPropertyChanging();
					this._Sexo = value;
					this.SendPropertyChanged("Sexo");
					this.OnSexoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha_nacimiento", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha_nacimiento
		{
			get
			{
				return this._Fecha_nacimiento;
			}
			set
			{
				if ((this._Fecha_nacimiento != value))
				{
					this.OnFecha_nacimientoChanging(value);
					this.SendPropertyChanging();
					this._Fecha_nacimiento = value;
					this.SendPropertyChanged("Fecha_nacimiento");
					this.OnFecha_nacimientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Señas_particulares", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Señas_particulares
		{
			get
			{
				return this._Señas_particulares;
			}
			set
			{
				if ((this._Señas_particulares != value))
				{
					this.OnSeñas_particularesChanging(value);
					this.SendPropertyChanging();
					this._Señas_particulares = value;
					this.SendPropertyChanged("Señas_particulares");
					this.OnSeñas_particularesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_estado_mascota", DbType="Int NOT NULL")]
		public int ID_estado_mascota
		{
			get
			{
				return this._ID_estado_mascota;
			}
			set
			{
				if ((this._ID_estado_mascota != value))
				{
					if (this._Estados.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_estado_mascotaChanging(value);
					this.SendPropertyChanging();
					this._ID_estado_mascota = value;
					this.SendPropertyChanged("ID_estado_mascota");
					this.OnID_estado_mascotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mascotas_Detalle_historia", Storage="_Detalle_historia", ThisKey="ID_mascota", OtherKey="ID_mascota")]
		public EntitySet<Detalle_historia> Detalle_historia
		{
			get
			{
				return this._Detalle_historia;
			}
			set
			{
				this._Detalle_historia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estados_Mascotas", Storage="_Estados", ThisKey="ID_estado_mascota", OtherKey="ID_estado", IsForeignKey=true)]
		public Estados Estados
		{
			get
			{
				return this._Estados.Entity;
			}
			set
			{
				Estados previousValue = this._Estados.Entity;
				if (((previousValue != value) 
							|| (this._Estados.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estados.Entity = null;
						previousValue.Mascotas.Remove(this);
					}
					this._Estados.Entity = value;
					if ((value != null))
					{
						value.Mascotas.Add(this);
						this._ID_estado_mascota = value.ID_estado;
					}
					else
					{
						this._ID_estado_mascota = default(int);
					}
					this.SendPropertyChanged("Estados");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Mascotas", Storage="_Usuarios", ThisKey="Cedula_usuario,Tipo_documento_usuario", OtherKey="Numero_doc,Tipo_documento", IsForeignKey=true)]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Mascotas.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Mascotas.Add(this);
						this._Cedula_usuario = value.Numero_doc;
						this._Tipo_documento_usuario = value.Tipo_documento;
					}
					else
					{
						this._Cedula_usuario = default(int);
						this._Tipo_documento_usuario = default(string);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detalle_historia(Detalle_historia entity)
		{
			this.SendPropertyChanging();
			entity.Mascotas = this;
		}
		
		private void detach_Detalle_historia(Detalle_historia entity)
		{
			this.SendPropertyChanging();
			entity.Mascotas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Permisos")]
	public partial class Permisos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_permiso;
		
		private string _Descripcion;
		
		private EntitySet<Roles_Permiso> _Roles_Permiso;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_permisoChanging(int value);
    partial void OnID_permisoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Permisos()
		{
			this._Roles_Permiso = new EntitySet<Roles_Permiso>(new Action<Roles_Permiso>(this.attach_Roles_Permiso), new Action<Roles_Permiso>(this.detach_Roles_Permiso));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_permiso", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_permiso
		{
			get
			{
				return this._ID_permiso;
			}
			set
			{
				if ((this._ID_permiso != value))
				{
					this.OnID_permisoChanging(value);
					this.SendPropertyChanging();
					this._ID_permiso = value;
					this.SendPropertyChanged("ID_permiso");
					this.OnID_permisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permisos_Roles_Permiso", Storage="_Roles_Permiso", ThisKey="ID_permiso", OtherKey="ID_permiso")]
		public EntitySet<Roles_Permiso> Roles_Permiso
		{
			get
			{
				return this._Roles_Permiso;
			}
			set
			{
				this._Roles_Permiso.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Roles_Permiso(Roles_Permiso entity)
		{
			this.SendPropertyChanging();
			entity.Permisos = this;
		}
		
		private void detach_Roles_Permiso(Roles_Permiso entity)
		{
			this.SendPropertyChanging();
			entity.Permisos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_rol;
		
		private string _Descripcion;
		
		private EntitySet<Roles_Permiso> _Roles_Permiso;
		
		private EntitySet<Usuarios> _Usuarios;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_rolChanging(int value);
    partial void OnID_rolChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    #endregion
		
		public Roles()
		{
			this._Roles_Permiso = new EntitySet<Roles_Permiso>(new Action<Roles_Permiso>(this.attach_Roles_Permiso), new Action<Roles_Permiso>(this.detach_Roles_Permiso));
			this._Usuarios = new EntitySet<Usuarios>(new Action<Usuarios>(this.attach_Usuarios), new Action<Usuarios>(this.detach_Usuarios));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_rol", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_rol
		{
			get
			{
				return this._ID_rol;
			}
			set
			{
				if ((this._ID_rol != value))
				{
					this.OnID_rolChanging(value);
					this.SendPropertyChanging();
					this._ID_rol = value;
					this.SendPropertyChanged("ID_rol");
					this.OnID_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Roles_Permiso", Storage="_Roles_Permiso", ThisKey="ID_rol", OtherKey="ID_rol")]
		public EntitySet<Roles_Permiso> Roles_Permiso
		{
			get
			{
				return this._Roles_Permiso;
			}
			set
			{
				this._Roles_Permiso.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Usuarios", Storage="_Usuarios", ThisKey="ID_rol", OtherKey="ID_rol")]
		public EntitySet<Usuarios> Usuarios
		{
			get
			{
				return this._Usuarios;
			}
			set
			{
				this._Usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Roles_Permiso(Roles_Permiso entity)
		{
			this.SendPropertyChanging();
			entity.Roles = this;
		}
		
		private void detach_Roles_Permiso(Roles_Permiso entity)
		{
			this.SendPropertyChanging();
			entity.Roles = null;
		}
		
		private void attach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Roles = this;
		}
		
		private void detach_Usuarios(Usuarios entity)
		{
			this.SendPropertyChanging();
			entity.Roles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles_Permiso")]
	public partial class Roles_Permiso : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_rol;
		
		private int _ID_permiso;
		
		private EntityRef<Permisos> _Permisos;
		
		private EntityRef<Roles> _Roles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_rolChanging(int value);
    partial void OnID_rolChanged();
    partial void OnID_permisoChanging(int value);
    partial void OnID_permisoChanged();
    #endregion
		
		public Roles_Permiso()
		{
			this._Permisos = default(EntityRef<Permisos>);
			this._Roles = default(EntityRef<Roles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_rol", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_rol
		{
			get
			{
				return this._ID_rol;
			}
			set
			{
				if ((this._ID_rol != value))
				{
					if (this._Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_rolChanging(value);
					this.SendPropertyChanging();
					this._ID_rol = value;
					this.SendPropertyChanged("ID_rol");
					this.OnID_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_permiso", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_permiso
		{
			get
			{
				return this._ID_permiso;
			}
			set
			{
				if ((this._ID_permiso != value))
				{
					if (this._Permisos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_permisoChanging(value);
					this.SendPropertyChanging();
					this._ID_permiso = value;
					this.SendPropertyChanged("ID_permiso");
					this.OnID_permisoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permisos_Roles_Permiso", Storage="_Permisos", ThisKey="ID_permiso", OtherKey="ID_permiso", IsForeignKey=true)]
		public Permisos Permisos
		{
			get
			{
				return this._Permisos.Entity;
			}
			set
			{
				Permisos previousValue = this._Permisos.Entity;
				if (((previousValue != value) 
							|| (this._Permisos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permisos.Entity = null;
						previousValue.Roles_Permiso.Remove(this);
					}
					this._Permisos.Entity = value;
					if ((value != null))
					{
						value.Roles_Permiso.Add(this);
						this._ID_permiso = value.ID_permiso;
					}
					else
					{
						this._ID_permiso = default(int);
					}
					this.SendPropertyChanged("Permisos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Roles_Permiso", Storage="_Roles", ThisKey="ID_rol", OtherKey="ID_rol", IsForeignKey=true)]
		public Roles Roles
		{
			get
			{
				return this._Roles.Entity;
			}
			set
			{
				Roles previousValue = this._Roles.Entity;
				if (((previousValue != value) 
							|| (this._Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roles.Entity = null;
						previousValue.Roles_Permiso.Remove(this);
					}
					this._Roles.Entity = value;
					if ((value != null))
					{
						value.Roles_Permiso.Add(this);
						this._ID_rol = value.ID_rol;
					}
					else
					{
						this._ID_rol = default(int);
					}
					this.SendPropertyChanged("Roles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Numero_doc;
		
		private string _Tipo_documento;
		
		private System.Nullable<int> _ID_rol;
		
		private string _Nombres;
		
		private string _Apellidos;
		
		private System.Nullable<int> _Telefono;
		
		private string _Direccion;
		
		private string _Email;
		
		private System.Nullable<int> _ID_ciudad;
		
		private string _Password_u;
		
		private string _Imagen;
		
		private EntitySet<Mascotas> _Mascotas;
		
		private EntityRef<Ciudades> _Ciudades;
		
		private EntityRef<Roles> _Roles;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumero_docChanging(int value);
    partial void OnNumero_docChanged();
    partial void OnTipo_documentoChanging(string value);
    partial void OnTipo_documentoChanged();
    partial void OnID_rolChanging(System.Nullable<int> value);
    partial void OnID_rolChanged();
    partial void OnNombresChanging(string value);
    partial void OnNombresChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnTelefonoChanging(System.Nullable<int> value);
    partial void OnTelefonoChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnID_ciudadChanging(System.Nullable<int> value);
    partial void OnID_ciudadChanged();
    partial void OnPassword_uChanging(string value);
    partial void OnPassword_uChanged();
    partial void OnImagenChanging(string value);
    partial void OnImagenChanged();
    #endregion
		
		public Usuarios()
		{
			this._Mascotas = new EntitySet<Mascotas>(new Action<Mascotas>(this.attach_Mascotas), new Action<Mascotas>(this.detach_Mascotas));
			this._Ciudades = default(EntityRef<Ciudades>);
			this._Roles = default(EntityRef<Roles>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero_doc", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Numero_doc
		{
			get
			{
				return this._Numero_doc;
			}
			set
			{
				if ((this._Numero_doc != value))
				{
					this.OnNumero_docChanging(value);
					this.SendPropertyChanging();
					this._Numero_doc = value;
					this.SendPropertyChanged("Numero_doc");
					this.OnNumero_docChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo_documento", DbType="VarChar(3) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Tipo_documento
		{
			get
			{
				return this._Tipo_documento;
			}
			set
			{
				if ((this._Tipo_documento != value))
				{
					this.OnTipo_documentoChanging(value);
					this.SendPropertyChanging();
					this._Tipo_documento = value;
					this.SendPropertyChanged("Tipo_documento");
					this.OnTipo_documentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_rol", DbType="Int")]
		public System.Nullable<int> ID_rol
		{
			get
			{
				return this._ID_rol;
			}
			set
			{
				if ((this._ID_rol != value))
				{
					if (this._Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_rolChanging(value);
					this.SendPropertyChanging();
					this._ID_rol = value;
					this.SendPropertyChanged("ID_rol");
					this.OnID_rolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombres", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nombres
		{
			get
			{
				return this._Nombres;
			}
			set
			{
				if ((this._Nombres != value))
				{
					this.OnNombresChanging(value);
					this.SendPropertyChanging();
					this._Nombres = value;
					this.SendPropertyChanged("Nombres");
					this.OnNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="Int")]
		public System.Nullable<int> Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_ciudad", DbType="Int")]
		public System.Nullable<int> ID_ciudad
		{
			get
			{
				return this._ID_ciudad;
			}
			set
			{
				if ((this._ID_ciudad != value))
				{
					if (this._Ciudades.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ciudadChanging(value);
					this.SendPropertyChanging();
					this._ID_ciudad = value;
					this.SendPropertyChanged("ID_ciudad");
					this.OnID_ciudadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password_u", DbType="VarChar(15)")]
		public string Password_u
		{
			get
			{
				return this._Password_u;
			}
			set
			{
				if ((this._Password_u != value))
				{
					this.OnPassword_uChanging(value);
					this.SendPropertyChanging();
					this._Password_u = value;
					this.SendPropertyChanged("Password_u");
					this.OnPassword_uChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imagen", DbType="VarChar(70)")]
		public string Imagen
		{
			get
			{
				return this._Imagen;
			}
			set
			{
				if ((this._Imagen != value))
				{
					this.OnImagenChanging(value);
					this.SendPropertyChanging();
					this._Imagen = value;
					this.SendPropertyChanged("Imagen");
					this.OnImagenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Mascotas", Storage="_Mascotas", ThisKey="Numero_doc,Tipo_documento", OtherKey="Cedula_usuario,Tipo_documento_usuario")]
		public EntitySet<Mascotas> Mascotas
		{
			get
			{
				return this._Mascotas;
			}
			set
			{
				this._Mascotas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ciudades_Usuarios", Storage="_Ciudades", ThisKey="ID_ciudad", OtherKey="ID_ciudad", IsForeignKey=true)]
		public Ciudades Ciudades
		{
			get
			{
				return this._Ciudades.Entity;
			}
			set
			{
				Ciudades previousValue = this._Ciudades.Entity;
				if (((previousValue != value) 
							|| (this._Ciudades.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ciudades.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._Ciudades.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._ID_ciudad = value.ID_ciudad;
					}
					else
					{
						this._ID_ciudad = default(Nullable<int>);
					}
					this.SendPropertyChanged("Ciudades");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_Usuarios", Storage="_Roles", ThisKey="ID_rol", OtherKey="ID_rol", IsForeignKey=true)]
		public Roles Roles
		{
			get
			{
				return this._Roles.Entity;
			}
			set
			{
				Roles previousValue = this._Roles.Entity;
				if (((previousValue != value) 
							|| (this._Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roles.Entity = null;
						previousValue.Usuarios.Remove(this);
					}
					this._Roles.Entity = value;
					if ((value != null))
					{
						value.Usuarios.Add(this);
						this._ID_rol = value.ID_rol;
					}
					else
					{
						this._ID_rol = default(Nullable<int>);
					}
					this.SendPropertyChanged("Roles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Mascotas(Mascotas entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Mascotas(Mascotas entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
	}
}
#pragma warning restore 1591
